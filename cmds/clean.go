/*
 * Copyright (c) 2016 Josh Vega
 * See LICENSE for license details.
 */
package cmds

import (
	"fmt"
	"os"

	"github.com/codegangsta/cli"

	"github.com/jsvcycling/hyde/parser"
)

// TODO: Add flag handling
var CleanCmd = cli.Command{
	Name:            "clean",
	Aliases:         []string{"c"},
	Usage:           "remove all content generated by hyde build/serve",
	SkipFlagParsing: true,
	Action:          doClean,
}

func doClean(ctx *cli.Context) {
	if _, err := os.Stat("hyde.toml"); os.IsNotExist(err) {
		fmt.Println("Hyde project not found")
		return
	}

	// Make sure the pages directory exists
	if _, err := os.Stat("pages"); os.IsNotExist(err) {
		fmt.Println("Invalid Hyde project")
		return
	}

	// Make sure the templates directory exists
	if _, err := os.Stat("templates"); os.IsNotExist(err) {
		fmt.Println("Invalid Hyde project")
		return
	}

	config := parser.ParseConfig("hyde.toml")

	if config.Error != nil {
		fmt.Println(config.Error.Error())
		return
	}

	if _, err := os.Stat(config.TargetDir); !os.IsNotExist(err) {
		if err := os.RemoveAll(config.TargetDir); err != nil {
			fmt.Println(err.Error())
		}
	}
}
